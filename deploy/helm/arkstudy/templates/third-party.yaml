{{- $ns := .Values.namespace | default .Release.Namespace -}}
{{- with .Values.thirdParty }}

{{- if .postgres.enabled }}
{{- /* compute init configmap name, allow override via existingConfigMap */}}
{{- $pgInitName := printf "%s-postgres-init" (include "arkstudy.fullname" $) -}}
{{- if .postgres.initSQL.existingConfigMap }}
{{- $pgInitName = .postgres.initSQL.existingConfigMap -}}
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "arkstudy.fullname" $ }}-postgres
  namespace: {{ $ns }}
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/component: postgres
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/component: postgres
  ports:
    - name: db
      port: {{ .postgres.port | default 5432 }}
      targetPort: 5432
---
{{- /* Optionally create the postgres password secret if a password value is provided in values.
     If a Secret with the same name already exists in the cluster (created manually or by another release),
     skip creating it to avoid ownership conflicts. */}}
{{- $existingPgSecret := (lookup "v1" "Secret" $ns .postgres.passwordSecretRef.name) -}}
{{- if and .postgres.password (not $existingPgSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .postgres.passwordSecretRef.name }}
  namespace: {{ $ns }}
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/component: postgres
type: Opaque
stringData:
  {{ .postgres.passwordSecretRef.key }}: {{ .postgres.password | quote }}
---
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arkstudy.fullname" $ }}-postgres
  namespace: {{ $ns }}
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/component: postgres
spec:
  serviceName: {{ include "arkstudy.fullname" $ }}-postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .postgres.image | default "postgres:16" }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: db
              containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .postgres.database | default "arkdb" | quote }}
            - name: POSTGRES_USER
              value: {{ .postgres.username | default "postgres" | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.passwordSecretRef.name }}
                  key: {{ .postgres.passwordSecretRef.key }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            {{- if .postgres.initSQL.enabled }}
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
      {{- if .postgres.initSQL.enabled }}
      volumes:
        - name: init-sql
          configMap:
            name: {{ $pgInitName }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .postgres.storage.size | default "5Gi" }}
        {{- if .postgres.storage.storageClassName }}
        storageClassName: {{ .postgres.storage.storageClassName }}
        {{- end }}
---
{{- if and .postgres.initSQL.enabled (not .postgres.initSQL.existingConfigMap) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $pgInitName }}
  namespace: {{ $ns }}
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/component: postgres
data:
  init.sql: |
{{ ($.Files.Get (.postgres.initSQL.file | default "files/init.sql")) | nindent 4 }}
{{- end }}
{{- end }}

{{- if .redis.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "arkstudy.fullname" $ }}-redis
  namespace: {{ $ns }}
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/component: redis
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/component: redis
  ports:
    - name: redis
      port: {{ .redis.port | default 6379 }}
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arkstudy.fullname" $ }}-redis
  namespace: {{ $ns }}
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: redis
    spec:
      containers:
        - name: redis
          image: {{ .redis.image | default "redis:7-alpine" }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
---
{{- end }}

{{- if .kafka.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "arkstudy.fullname" $ }}-kafka
  namespace: {{ $ns }}
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/component: kafka
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/component: kafka
  ports:
    - name: kafka
      port: {{ .kafka.port | default 9092 }}
      targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arkstudy.fullname" $ }}-kafka
  namespace: {{ $ns }}
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/component: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: kafka
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "arkstudy.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: kafka
    spec:
      containers:
        - name: kafka
          image: {{ .kafka.image | default "confluentinc/cp-kafka:latest" }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: kafka
              containerPort: 9092
          env:
            - name: KAFKA_PROCESS_ROLES
              value: broker,controller
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://{{ include "arkstudy.fullname" $ }}-kafka:{{ .kafka.port | default 9092 }}
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@localhost:9093"
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_CLUSTER_ID
              value: {{ .kafka.clusterId | default "6LZMxk8NTXidS6TGH1Zk1w" | quote }}
            - name: CLUSTER_ID
              value: {{ .kafka.clusterId | default "6LZMxk8NTXidS6TGH1Zk1w" | quote }}
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
{{- end }}

{{- end }}
