// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.19.6
// source: llm/llm.proto

package llm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MaterialIds   []string               `protobuf:"bytes,3,rep,name=material_ids,json=materialIds,proto3" json:"material_ids,omitempty"`
	Context       map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionRequest) Reset() {
	*x = QuestionRequest{}
	mi := &file_llm_llm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionRequest) ProtoMessage() {}

func (x *QuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionRequest.ProtoReflect.Descriptor instead.
func (*QuestionRequest) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{0}
}

func (x *QuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *QuestionRequest) GetMaterialIds() []string {
	if x != nil {
		return x.MaterialIds
	}
	return nil
}

func (x *QuestionRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

type SourceReference struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MaterialId     string                 `protobuf:"bytes,1,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	ContentSnippet string                 `protobuf:"bytes,2,opt,name=content_snippet,json=contentSnippet,proto3" json:"content_snippet,omitempty"`
	RelevanceScore float32                `protobuf:"fixed32,3,opt,name=relevance_score,json=relevanceScore,proto3" json:"relevance_score,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SourceReference) Reset() {
	*x = SourceReference{}
	mi := &file_llm_llm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceReference) ProtoMessage() {}

func (x *SourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceReference.ProtoReflect.Descriptor instead.
func (*SourceReference) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{1}
}

func (x *SourceReference) GetMaterialId() string {
	if x != nil {
		return x.MaterialId
	}
	return ""
}

func (x *SourceReference) GetContentSnippet() string {
	if x != nil {
		return x.ContentSnippet
	}
	return ""
}

func (x *SourceReference) GetRelevanceScore() float32 {
	if x != nil {
		return x.RelevanceScore
	}
	return 0
}

type QuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        string                 `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	Confidence    float32                `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Sources       []*SourceReference     `protobuf:"bytes,3,rep,name=sources,proto3" json:"sources,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionResponse) Reset() {
	*x = QuestionResponse{}
	mi := &file_llm_llm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionResponse) ProtoMessage() {}

func (x *QuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionResponse.ProtoReflect.Descriptor instead.
func (*QuestionResponse) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{2}
}

func (x *QuestionResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *QuestionResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *QuestionResponse) GetSources() []*SourceReference {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *QuestionResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type TokenChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`                                                                             // token 或分片
	IsFinal       bool                   `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`                                                             // 标记是否为最后一个分片
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 可选：包含中间元数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenChunk) Reset() {
	*x = TokenChunk{}
	mi := &file_llm_llm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenChunk) ProtoMessage() {}

func (x *TokenChunk) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenChunk.ProtoReflect.Descriptor instead.
func (*TokenChunk) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{3}
}

func (x *TokenChunk) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TokenChunk) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *TokenChunk) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TopK          int32                  `protobuf:"varint,3,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	MaterialIds   []string               `protobuf:"bytes,4,rep,name=material_ids,json=materialIds,proto3" json:"material_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_llm_llm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{4}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchRequest) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *SearchRequest) GetMaterialIds() []string {
	if x != nil {
		return x.MaterialIds
	}
	return nil
}

type SearchResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MaterialId      string                 `protobuf:"bytes,1,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	Content         string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	SimilarityScore float32                `protobuf:"fixed32,3,opt,name=similarity_score,json=similarityScore,proto3" json:"similarity_score,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_llm_llm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{5}
}

func (x *SearchResult) GetMaterialId() string {
	if x != nil {
		return x.MaterialId
	}
	return ""
}

func (x *SearchResult) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchResult) GetSimilarityScore() float32 {
	if x != nil {
		return x.SimilarityScore
	}
	return 0
}

func (x *SearchResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SearchResult        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_llm_llm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{6}
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmbeddingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	MaterialId    string                 `protobuf:"bytes,2,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbeddingRequest) Reset() {
	*x = EmbeddingRequest{}
	mi := &file_llm_llm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingRequest) ProtoMessage() {}

func (x *EmbeddingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingRequest.ProtoReflect.Descriptor instead.
func (*EmbeddingRequest) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{7}
}

func (x *EmbeddingRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EmbeddingRequest) GetMaterialId() string {
	if x != nil {
		return x.MaterialId
	}
	return ""
}

func (x *EmbeddingRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type EmbeddingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Embedding     []float32              `protobuf:"fixed32,1,rep,packed,name=embedding,proto3" json:"embedding,omitempty"`
	EmbeddingId   string                 `protobuf:"bytes,2,opt,name=embedding_id,json=embeddingId,proto3" json:"embedding_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbeddingResponse) Reset() {
	*x = EmbeddingResponse{}
	mi := &file_llm_llm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingResponse) ProtoMessage() {}

func (x *EmbeddingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingResponse.ProtoReflect.Descriptor instead.
func (*EmbeddingResponse) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{8}
}

func (x *EmbeddingResponse) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *EmbeddingResponse) GetEmbeddingId() string {
	if x != nil {
		return x.EmbeddingId
	}
	return ""
}

// 批量分片入库
type UpsertChunkItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 分片内容（已解析的文本）
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// 可选：视频/音频的时间码，如 "00:00:05-00:00:12"
	Timecode string `protobuf:"bytes,2,opt,name=timecode,proto3" json:"timecode,omitempty"`
	// 可选：文档页码
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 其他元数据（例如来源、分块策略等）
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertChunkItem) Reset() {
	*x = UpsertChunkItem{}
	mi := &file_llm_llm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertChunkItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertChunkItem) ProtoMessage() {}

func (x *UpsertChunkItem) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertChunkItem.ProtoReflect.Descriptor instead.
func (*UpsertChunkItem) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{9}
}

func (x *UpsertChunkItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpsertChunkItem) GetTimecode() string {
	if x != nil {
		return x.Timecode
	}
	return ""
}

func (x *UpsertChunkItem) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UpsertChunkItem) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpsertChunksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MaterialId    string                 `protobuf:"bytes,2,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	Chunks        []*UpsertChunkItem     `protobuf:"bytes,3,rep,name=chunks,proto3" json:"chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertChunksRequest) Reset() {
	*x = UpsertChunksRequest{}
	mi := &file_llm_llm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertChunksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertChunksRequest) ProtoMessage() {}

func (x *UpsertChunksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertChunksRequest.ProtoReflect.Descriptor instead.
func (*UpsertChunksRequest) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{10}
}

func (x *UpsertChunksRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpsertChunksRequest) GetMaterialId() string {
	if x != nil {
		return x.MaterialId
	}
	return ""
}

func (x *UpsertChunksRequest) GetChunks() []*UpsertChunkItem {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type UpsertChunksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inserted      int32                  `protobuf:"varint,1,opt,name=inserted,proto3" json:"inserted,omitempty"` // 实际入库的分片数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertChunksResponse) Reset() {
	*x = UpsertChunksResponse{}
	mi := &file_llm_llm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertChunksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertChunksResponse) ProtoMessage() {}

func (x *UpsertChunksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_llm_llm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertChunksResponse.ProtoReflect.Descriptor instead.
func (*UpsertChunksResponse) Descriptor() ([]byte, []int) {
	return file_llm_llm_proto_rawDescGZIP(), []int{11}
}

func (x *UpsertChunksResponse) GetInserted() int32 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

var File_llm_llm_proto protoreflect.FileDescriptor

const file_llm_llm_proto_rawDesc = "" +
	"\n" +
	"\rllm/llm.proto\x12\x03llm\"\xe2\x01\n" +
	"\x0fQuestionRequest\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\fmaterial_ids\x18\x03 \x03(\tR\vmaterialIds\x12;\n" +
	"\acontext\x18\x04 \x03(\v2!.llm.QuestionRequest.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x01\n" +
	"\x0fSourceReference\x12\x1f\n" +
	"\vmaterial_id\x18\x01 \x01(\tR\n" +
	"materialId\x12'\n" +
	"\x0fcontent_snippet\x18\x02 \x01(\tR\x0econtentSnippet\x12'\n" +
	"\x0frelevance_score\x18\x03 \x01(\x02R\x0erelevanceScore\"\xf8\x01\n" +
	"\x10QuestionResponse\x12\x16\n" +
	"\x06answer\x18\x01 \x01(\tR\x06answer\x12\x1e\n" +
	"\n" +
	"confidence\x18\x02 \x01(\x02R\n" +
	"confidence\x12.\n" +
	"\asources\x18\x03 \x03(\v2\x14.llm.SourceReferenceR\asources\x12?\n" +
	"\bmetadata\x18\x04 \x03(\v2#.llm.QuestionResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb9\x01\n" +
	"\n" +
	"TokenChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x19\n" +
	"\bis_final\x18\x02 \x01(\bR\aisFinal\x129\n" +
	"\bmetadata\x18\x03 \x03(\v2\x1d.llm.TokenChunk.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"v\n" +
	"\rSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x13\n" +
	"\x05top_k\x18\x03 \x01(\x05R\x04topK\x12!\n" +
	"\fmaterial_ids\x18\x04 \x03(\tR\vmaterialIds\"\xee\x01\n" +
	"\fSearchResult\x12\x1f\n" +
	"\vmaterial_id\x18\x01 \x01(\tR\n" +
	"materialId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12)\n" +
	"\x10similarity_score\x18\x03 \x01(\x02R\x0fsimilarityScore\x12;\n" +
	"\bmetadata\x18\x04 \x03(\v2\x1f.llm.SearchResult.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"=\n" +
	"\x0eSearchResponse\x12+\n" +
	"\aresults\x18\x01 \x03(\v2\x11.llm.SearchResultR\aresults\"p\n" +
	"\x10EmbeddingRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x1f\n" +
	"\vmaterial_id\x18\x02 \x01(\tR\n" +
	"materialId\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\"T\n" +
	"\x11EmbeddingResponse\x12\x1c\n" +
	"\tembedding\x18\x01 \x03(\x02R\tembedding\x12!\n" +
	"\fembedding_id\x18\x02 \x01(\tR\vembeddingId\"\xd8\x01\n" +
	"\x0fUpsertChunkItem\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x1a\n" +
	"\btimecode\x18\x02 \x01(\tR\btimecode\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12>\n" +
	"\bmetadata\x18\x04 \x03(\v2\".llm.UpsertChunkItem.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"}\n" +
	"\x13UpsertChunksRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1f\n" +
	"\vmaterial_id\x18\x02 \x01(\tR\n" +
	"materialId\x12,\n" +
	"\x06chunks\x18\x03 \x03(\v2\x14.llm.UpsertChunkItemR\x06chunks\"2\n" +
	"\x14UpsertChunksResponse\x12\x1a\n" +
	"\binserted\x18\x01 \x01(\x05R\binserted2\xcb\x02\n" +
	"\n" +
	"LLMService\x12:\n" +
	"\vAskQuestion\x12\x14.llm.QuestionRequest\x1a\x15.llm.QuestionResponse\x12<\n" +
	"\x11AskQuestionStream\x12\x14.llm.QuestionRequest\x1a\x0f.llm.TokenChunk0\x01\x129\n" +
	"\x0eSemanticSearch\x12\x12.llm.SearchRequest\x1a\x13.llm.SearchResponse\x12C\n" +
	"\x12GenerateEmbeddings\x12\x15.llm.EmbeddingRequest\x1a\x16.llm.EmbeddingResponse\x12C\n" +
	"\fUpsertChunks\x12\x18.llm.UpsertChunksRequest\x1a\x19.llm.UpsertChunksResponseB)Z'github.com/RigelNana/arkstudy/proto/llmb\x06proto3"

var (
	file_llm_llm_proto_rawDescOnce sync.Once
	file_llm_llm_proto_rawDescData []byte
)

func file_llm_llm_proto_rawDescGZIP() []byte {
	file_llm_llm_proto_rawDescOnce.Do(func() {
		file_llm_llm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_llm_llm_proto_rawDesc), len(file_llm_llm_proto_rawDesc)))
	})
	return file_llm_llm_proto_rawDescData
}

var file_llm_llm_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_llm_llm_proto_goTypes = []any{
	(*QuestionRequest)(nil),      // 0: llm.QuestionRequest
	(*SourceReference)(nil),      // 1: llm.SourceReference
	(*QuestionResponse)(nil),     // 2: llm.QuestionResponse
	(*TokenChunk)(nil),           // 3: llm.TokenChunk
	(*SearchRequest)(nil),        // 4: llm.SearchRequest
	(*SearchResult)(nil),         // 5: llm.SearchResult
	(*SearchResponse)(nil),       // 6: llm.SearchResponse
	(*EmbeddingRequest)(nil),     // 7: llm.EmbeddingRequest
	(*EmbeddingResponse)(nil),    // 8: llm.EmbeddingResponse
	(*UpsertChunkItem)(nil),      // 9: llm.UpsertChunkItem
	(*UpsertChunksRequest)(nil),  // 10: llm.UpsertChunksRequest
	(*UpsertChunksResponse)(nil), // 11: llm.UpsertChunksResponse
	nil,                          // 12: llm.QuestionRequest.ContextEntry
	nil,                          // 13: llm.QuestionResponse.MetadataEntry
	nil,                          // 14: llm.TokenChunk.MetadataEntry
	nil,                          // 15: llm.SearchResult.MetadataEntry
	nil,                          // 16: llm.UpsertChunkItem.MetadataEntry
}
var file_llm_llm_proto_depIdxs = []int32{
	12, // 0: llm.QuestionRequest.context:type_name -> llm.QuestionRequest.ContextEntry
	1,  // 1: llm.QuestionResponse.sources:type_name -> llm.SourceReference
	13, // 2: llm.QuestionResponse.metadata:type_name -> llm.QuestionResponse.MetadataEntry
	14, // 3: llm.TokenChunk.metadata:type_name -> llm.TokenChunk.MetadataEntry
	15, // 4: llm.SearchResult.metadata:type_name -> llm.SearchResult.MetadataEntry
	5,  // 5: llm.SearchResponse.results:type_name -> llm.SearchResult
	16, // 6: llm.UpsertChunkItem.metadata:type_name -> llm.UpsertChunkItem.MetadataEntry
	9,  // 7: llm.UpsertChunksRequest.chunks:type_name -> llm.UpsertChunkItem
	0,  // 8: llm.LLMService.AskQuestion:input_type -> llm.QuestionRequest
	0,  // 9: llm.LLMService.AskQuestionStream:input_type -> llm.QuestionRequest
	4,  // 10: llm.LLMService.SemanticSearch:input_type -> llm.SearchRequest
	7,  // 11: llm.LLMService.GenerateEmbeddings:input_type -> llm.EmbeddingRequest
	10, // 12: llm.LLMService.UpsertChunks:input_type -> llm.UpsertChunksRequest
	2,  // 13: llm.LLMService.AskQuestion:output_type -> llm.QuestionResponse
	3,  // 14: llm.LLMService.AskQuestionStream:output_type -> llm.TokenChunk
	6,  // 15: llm.LLMService.SemanticSearch:output_type -> llm.SearchResponse
	8,  // 16: llm.LLMService.GenerateEmbeddings:output_type -> llm.EmbeddingResponse
	11, // 17: llm.LLMService.UpsertChunks:output_type -> llm.UpsertChunksResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_llm_llm_proto_init() }
func file_llm_llm_proto_init() {
	if File_llm_llm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_llm_llm_proto_rawDesc), len(file_llm_llm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_llm_llm_proto_goTypes,
		DependencyIndexes: file_llm_llm_proto_depIdxs,
		MessageInfos:      file_llm_llm_proto_msgTypes,
	}.Build()
	File_llm_llm_proto = out.File
	file_llm_llm_proto_goTypes = nil
	file_llm_llm_proto_depIdxs = nil
}
