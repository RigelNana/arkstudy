// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.19.6
// source: ai/ai.proto

package ai

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 任务状态枚举
type TaskStatus int32

const (
	TaskStatus_QUEUED     TaskStatus = 0
	TaskStatus_PROCESSING TaskStatus = 1
	TaskStatus_COMPLETED  TaskStatus = 2
	TaskStatus_FAILED     TaskStatus = 3
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "QUEUED",
		1: "PROCESSING",
		2: "COMPLETED",
		3: "FAILED",
	}
	TaskStatus_value = map[string]int32{
		"QUEUED":     0,
		"PROCESSING": 1,
		"COMPLETED":  2,
		"FAILED":     3,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ai_ai_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_ai_ai_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{0}
}

type OCRRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FileUrl       string                 `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	FileType      string                 `protobuf:"bytes,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	Options       map[string]string      `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 语言、精度等选项
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCRRequest) Reset() {
	*x = OCRRequest{}
	mi := &file_ai_ai_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRRequest) ProtoMessage() {}

func (x *OCRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRRequest.ProtoReflect.Descriptor instead.
func (*OCRRequest) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{0}
}

func (x *OCRRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *OCRRequest) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *OCRRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *OCRRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type OCRResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=ai.TaskStatus" json:"status,omitempty"`
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Confidence    float32                `protobuf:"fixed32,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Boxes         []*BoundingBox         `protobuf:"bytes,5,rep,name=boxes,proto3" json:"boxes,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCRResponse) Reset() {
	*x = OCRResponse{}
	mi := &file_ai_ai_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRResponse) ProtoMessage() {}

func (x *OCRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRResponse.ProtoReflect.Descriptor instead.
func (*OCRResponse) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{1}
}

func (x *OCRResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *OCRResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_QUEUED
}

func (x *OCRResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OCRResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *OCRResponse) GetBoxes() []*BoundingBox {
	if x != nil {
		return x.Boxes
	}
	return nil
}

func (x *OCRResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type BoundingBox struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Width         float32                `protobuf:"fixed32,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        float32                `protobuf:"fixed32,4,opt,name=height,proto3" json:"height,omitempty"`
	Text          string                 `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	Confidence    float32                `protobuf:"fixed32,6,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoundingBox) Reset() {
	*x = BoundingBox{}
	mi := &file_ai_ai_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoundingBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundingBox) ProtoMessage() {}

func (x *BoundingBox) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundingBox.ProtoReflect.Descriptor instead.
func (*BoundingBox) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{2}
}

func (x *BoundingBox) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *BoundingBox) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *BoundingBox) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *BoundingBox) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BoundingBox) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BoundingBox) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type ASRRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FileUrl       string                 `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	Language      string                 `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Options       map[string]string      `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 模型、质量等选项
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ASRRequest) Reset() {
	*x = ASRRequest{}
	mi := &file_ai_ai_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASRRequest) ProtoMessage() {}

func (x *ASRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASRRequest.ProtoReflect.Descriptor instead.
func (*ASRRequest) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{3}
}

func (x *ASRRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ASRRequest) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *ASRRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ASRRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type ASRResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskId           string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status           TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=ai.TaskStatus" json:"status,omitempty"`
	Transcript       string                 `protobuf:"bytes,3,opt,name=transcript,proto3" json:"transcript,omitempty"`
	Confidence       float32                `protobuf:"fixed32,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Segments         []*Segment             `protobuf:"bytes,5,rep,name=segments,proto3" json:"segments,omitempty"`
	LanguageDetected string                 `protobuf:"bytes,6,opt,name=language_detected,json=languageDetected,proto3" json:"language_detected,omitempty"`
	ErrorMessage     string                 `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ASRResponse) Reset() {
	*x = ASRResponse{}
	mi := &file_ai_ai_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASRResponse) ProtoMessage() {}

func (x *ASRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASRResponse.ProtoReflect.Descriptor instead.
func (*ASRResponse) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{4}
}

func (x *ASRResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ASRResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_QUEUED
}

func (x *ASRResponse) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *ASRResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *ASRResponse) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *ASRResponse) GetLanguageDetected() string {
	if x != nil {
		return x.LanguageDetected
	}
	return ""
}

func (x *ASRResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     float32                `protobuf:"fixed32,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       float32                `protobuf:"fixed32,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Confidence    float32                `protobuf:"fixed32,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_ai_ai_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{5}
}

func (x *Segment) GetStartTime() float32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Segment) GetEndTime() float32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Segment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Segment) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type LLMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Prompt        string                 `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Model         string                 `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Options       map[string]string      `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 温度、最大长度等选项
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LLMRequest) Reset() {
	*x = LLMRequest{}
	mi := &file_ai_ai_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMRequest) ProtoMessage() {}

func (x *LLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMRequest.ProtoReflect.Descriptor instead.
func (*LLMRequest) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{6}
}

func (x *LLMRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *LLMRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LLMRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *LLMRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *LLMRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type LLMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=ai.TaskStatus" json:"status,omitempty"`
	Result        string                 `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 模型信息、token使用量等
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LLMResponse) Reset() {
	*x = LLMResponse{}
	mi := &file_ai_ai_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMResponse) ProtoMessage() {}

func (x *LLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMResponse.ProtoReflect.Descriptor instead.
func (*LLMResponse) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{7}
}

func (x *LLMResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *LLMResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_QUEUED
}

func (x *LLMResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *LLMResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LLMResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type TaskStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatusRequest) Reset() {
	*x = TaskStatusRequest{}
	mi := &file_ai_ai_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusRequest) ProtoMessage() {}

func (x *TaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusRequest.ProtoReflect.Descriptor instead.
func (*TaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{8}
}

func (x *TaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type TaskStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=ai.TaskStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Progress      float32                `protobuf:"fixed32,4,opt,name=progress,proto3" json:"progress,omitempty"` // 0.0-1.0
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatusResponse) Reset() {
	*x = TaskStatusResponse{}
	mi := &file_ai_ai_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusResponse) ProtoMessage() {}

func (x *TaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_ai_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusResponse.ProtoReflect.Descriptor instead.
func (*TaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_ai_ai_proto_rawDescGZIP(), []int{9}
}

func (x *TaskStatusResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStatusResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_QUEUED
}

func (x *TaskStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskStatusResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TaskStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_ai_ai_proto protoreflect.FileDescriptor

const file_ai_ai_proto_rawDesc = "" +
	"\n" +
	"\vai/ai.proto\x12\x02ai\"\xd0\x01\n" +
	"\n" +
	"OCRRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x19\n" +
	"\bfile_url\x18\x02 \x01(\tR\afileUrl\x12\x1b\n" +
	"\tfile_type\x18\x03 \x01(\tR\bfileType\x125\n" +
	"\aoptions\x18\x04 \x03(\v2\x1b.ai.OCRRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xce\x01\n" +
	"\vOCRResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12&\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0e.ai.TaskStatusR\x06status\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\x12\x1e\n" +
	"\n" +
	"confidence\x18\x04 \x01(\x02R\n" +
	"confidence\x12%\n" +
	"\x05boxes\x18\x05 \x03(\v2\x0f.ai.BoundingBoxR\x05boxes\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"\x8b\x01\n" +
	"\vBoundingBox\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x02R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x02R\x06height\x12\x12\n" +
	"\x04text\x18\x05 \x01(\tR\x04text\x12\x1e\n" +
	"\n" +
	"confidence\x18\x06 \x01(\x02R\n" +
	"confidence\"\xcf\x01\n" +
	"\n" +
	"ASRRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x19\n" +
	"\bfile_url\x18\x02 \x01(\tR\afileUrl\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\x125\n" +
	"\aoptions\x18\x04 \x03(\v2\x1b.ai.ASRRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x02\n" +
	"\vASRResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12&\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0e.ai.TaskStatusR\x06status\x12\x1e\n" +
	"\n" +
	"transcript\x18\x03 \x01(\tR\n" +
	"transcript\x12\x1e\n" +
	"\n" +
	"confidence\x18\x04 \x01(\x02R\n" +
	"confidence\x12'\n" +
	"\bsegments\x18\x05 \x03(\v2\v.ai.SegmentR\bsegments\x12+\n" +
	"\x11language_detected\x18\x06 \x01(\tR\x10languageDetected\x12#\n" +
	"\rerror_message\x18\a \x01(\tR\ferrorMessage\"w\n" +
	"\aSegment\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x02R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x02R\aendTime\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\x12\x1e\n" +
	"\n" +
	"confidence\x18\x04 \x01(\x02R\n" +
	"confidence\"\xe0\x01\n" +
	"\n" +
	"LLMRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x16\n" +
	"\x06prompt\x18\x03 \x01(\tR\x06prompt\x12\x14\n" +
	"\x05model\x18\x04 \x01(\tR\x05model\x125\n" +
	"\aoptions\x18\x05 \x03(\v2\x1b.ai.LLMRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x83\x02\n" +
	"\vLLMResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12&\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0e.ai.TaskStatusR\x06status\x12\x16\n" +
	"\x06result\x18\x03 \x01(\tR\x06result\x129\n" +
	"\bmetadata\x18\x04 \x03(\v2\x1d.ai.LLMResponse.MetadataEntryR\bmetadata\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\x11TaskStatusRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"\xb0\x01\n" +
	"\x12TaskStatusResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12&\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0e.ai.TaskStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x02R\bprogress\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage*C\n" +
	"\n" +
	"TaskStatus\x12\n" +
	"\n" +
	"\x06QUEUED\x10\x00\x12\x0e\n" +
	"\n" +
	"PROCESSING\x10\x01\x12\r\n" +
	"\tCOMPLETED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x032\xd8\x01\n" +
	"\tAIService\x12-\n" +
	"\n" +
	"ProcessOCR\x12\x0e.ai.OCRRequest\x1a\x0f.ai.OCRResponse\x12-\n" +
	"\n" +
	"ProcessASR\x12\x0e.ai.ASRRequest\x1a\x0f.ai.ASRResponse\x12-\n" +
	"\n" +
	"ProcessLLM\x12\x0e.ai.LLMRequest\x1a\x0f.ai.LLMResponse\x12>\n" +
	"\rGetTaskStatus\x12\x15.ai.TaskStatusRequest\x1a\x16.ai.TaskStatusResponseB(Z&github.com/RigelNana/arkstudy/proto/aib\x06proto3"

var (
	file_ai_ai_proto_rawDescOnce sync.Once
	file_ai_ai_proto_rawDescData []byte
)

func file_ai_ai_proto_rawDescGZIP() []byte {
	file_ai_ai_proto_rawDescOnce.Do(func() {
		file_ai_ai_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_ai_proto_rawDesc), len(file_ai_ai_proto_rawDesc)))
	})
	return file_ai_ai_proto_rawDescData
}

var file_ai_ai_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ai_ai_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_ai_ai_proto_goTypes = []any{
	(TaskStatus)(0),            // 0: ai.TaskStatus
	(*OCRRequest)(nil),         // 1: ai.OCRRequest
	(*OCRResponse)(nil),        // 2: ai.OCRResponse
	(*BoundingBox)(nil),        // 3: ai.BoundingBox
	(*ASRRequest)(nil),         // 4: ai.ASRRequest
	(*ASRResponse)(nil),        // 5: ai.ASRResponse
	(*Segment)(nil),            // 6: ai.Segment
	(*LLMRequest)(nil),         // 7: ai.LLMRequest
	(*LLMResponse)(nil),        // 8: ai.LLMResponse
	(*TaskStatusRequest)(nil),  // 9: ai.TaskStatusRequest
	(*TaskStatusResponse)(nil), // 10: ai.TaskStatusResponse
	nil,                        // 11: ai.OCRRequest.OptionsEntry
	nil,                        // 12: ai.ASRRequest.OptionsEntry
	nil,                        // 13: ai.LLMRequest.OptionsEntry
	nil,                        // 14: ai.LLMResponse.MetadataEntry
}
var file_ai_ai_proto_depIdxs = []int32{
	11, // 0: ai.OCRRequest.options:type_name -> ai.OCRRequest.OptionsEntry
	0,  // 1: ai.OCRResponse.status:type_name -> ai.TaskStatus
	3,  // 2: ai.OCRResponse.boxes:type_name -> ai.BoundingBox
	12, // 3: ai.ASRRequest.options:type_name -> ai.ASRRequest.OptionsEntry
	0,  // 4: ai.ASRResponse.status:type_name -> ai.TaskStatus
	6,  // 5: ai.ASRResponse.segments:type_name -> ai.Segment
	13, // 6: ai.LLMRequest.options:type_name -> ai.LLMRequest.OptionsEntry
	0,  // 7: ai.LLMResponse.status:type_name -> ai.TaskStatus
	14, // 8: ai.LLMResponse.metadata:type_name -> ai.LLMResponse.MetadataEntry
	0,  // 9: ai.TaskStatusResponse.status:type_name -> ai.TaskStatus
	1,  // 10: ai.AIService.ProcessOCR:input_type -> ai.OCRRequest
	4,  // 11: ai.AIService.ProcessASR:input_type -> ai.ASRRequest
	7,  // 12: ai.AIService.ProcessLLM:input_type -> ai.LLMRequest
	9,  // 13: ai.AIService.GetTaskStatus:input_type -> ai.TaskStatusRequest
	2,  // 14: ai.AIService.ProcessOCR:output_type -> ai.OCRResponse
	5,  // 15: ai.AIService.ProcessASR:output_type -> ai.ASRResponse
	8,  // 16: ai.AIService.ProcessLLM:output_type -> ai.LLMResponse
	10, // 17: ai.AIService.GetTaskStatus:output_type -> ai.TaskStatusResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ai_ai_proto_init() }
func file_ai_ai_proto_init() {
	if File_ai_ai_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_ai_proto_rawDesc), len(file_ai_ai_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_ai_proto_goTypes,
		DependencyIndexes: file_ai_ai_proto_depIdxs,
		EnumInfos:         file_ai_ai_proto_enumTypes,
		MessageInfos:      file_ai_ai_proto_msgTypes,
	}.Build()
	File_ai_ai_proto = out.File
	file_ai_ai_proto_goTypes = nil
	file_ai_ai_proto_depIdxs = nil
}
